# -*- mode: ruby -*-
# vi: set ft=ruby :

#FILE
# vagrant/Vagrantfile
#PURPOSE
# Build a docker-compose Odoo VM and Docker images quasi deterministicly.
# Useful for testing and for base for building production images.
#PROVIDES
#	Ubuntu Xenial VM Docker Compose production ready
#	Automatic nginx reverse proxy
#	Odoo ERP w/DB in separate container
#USE
#	cd vagrant; vagrant up
#	For VM guests on Ubuntu Xenial
#	Requires Virtual box host only nework vboxnet0 setup with virtual box dhcp server
#	running on host. And you may need to run:
#	$ VBoxManage dhcpserver remove --netname HostInterfaceNetworking-vboxnet0
#AUTHOR
# (C) 2016 Gary Wallis unxs@unxs.io for Adhoc Engineering S.A.

Vagrant.configure("2") do |config|

  config.vm.box = "ubuntu/xenial64"

  config.vm.provider :virtualbox do |vb|
	vb.name = "adhoc0"
	config.vm.network "private_network", :type => 'dhcp', :name => 'vboxnet0', :adapter => 2
  end

  config.vm.provision "shell", inline: <<-SHELL

	grep -q 'mesg n' /root/.profile && sed -i '/mesg n/d' /root/.profile && echo 'Ignore the previous error...';
	apt-get update --assume-yes;
	if [ "$?" != "0" ];then
          echo "apt-get update failed";
          exit 1;
	fi
        apt-get upgrade --assume-yes;
	if [ "$?" != "0" ];then
          echo "apt-get upgrade failed";
          exit 1;
	fi
	apt-get install python-pip --assume-yes;
	if [ "$?" != "0" ];then
          echo "python-pip install failed";
          exit 1;
	fi
        pip install --upgrade docker-compose;
	if [ "$?" != "0" ];then
          echo "pip install failed";
          exit 1;
	fi
        curl -sSL https://get.docker.com/ | /bin/bash;
	if [ "$?" != "0" ];then
          echo "docker script failed";
          exit 1;
	fi
        systemctl enable docker;
	if [ "$?" != "0" ];then
          echo "docker systemd enabled failed";
          exit 1;
	fi
        systemctl start docker;
	if [ "$?" != "0" ];then
          echo "docker systemd start failed";
          exit 1;
	fi

        git clone https://github.com/ingadhoc/docker-odoo-adhoc.git;
	if [ "$?" != "0" ];then
          echo "git clone failed";
          exit 1;
	fi
	#this creates the dockernginxadhox_backend network
	#it must be created once and before any other containers.
	#automated reverse proxy nginx-proxy
	cd docker-odoo-adhoc/docker-nginx-adhoc;
	docker-compose up -d;
	if [ "$?" != "0" ];then
          echo "docker-compose up nginx failed";
          exit 1;
	fi

	#start db and odoo
	cd ..;
	docker-compose up -d;
	if [ "$?" != "0" ];then
          echo "docker-compose up odoo failed";
          exit 1;
	fi

	#make docker containers persist reboot
	docker update --restart=always dockerodooadhoc_odoo_1;
	docker update --restart=always dockerodooadhoc_db_1;
	docker update --restart=always nginx-proxy;
	echo "odoo available on port 8069 local and via nginx on port 80";
  SHELL
end
